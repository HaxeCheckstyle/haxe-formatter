{
	"emptyLines": {
		"abstractEmptyLines": {
			"betweenStaticFunctions": 0
		}
	}
}

---

@:coreType private abstract EnumUnderlying<T> from T to T {
	@:op(A | B) public static function or<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(A ^ B) public static function xor<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(A & B) public static function and<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(~A) public static function bneg<T>(t:EnumUnderlying<T>):T;
}

---

@:coreType private abstract EnumUnderlying<T> from T to T {
	@:op(A | B) public static function or<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(A ^ B) public static function xor<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(A & B) public static function and<T>(lhs:EnumUnderlying<T>, rhs:EnumUnderlying<T>):T;
	@:op(~A) public static function bneg<T>(t:EnumUnderlying<T>):T;
}
