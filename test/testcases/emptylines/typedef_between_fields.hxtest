{
	"emptyLines": {
		"afterLeftCurly": "keep",
		"typedefEmptyLines": {
			"beginType": 1,
			"betweenFields": 1,
			"existingBetweenFields": "remove"
		}
	}
}

---

typedef Color = {
	final red:Float;
	final green:Float;
	var green:Float;
}

typedef ConditionalEmptyLinesConfig = {
	@:default(0) @:optional var afterIf:Int;
	@:default(0) @:optional var beforeElse:Int;
	@:default(0) @:optional var afterElse:Int;
	@:default(0) @:optional var beforeEnd:Int;
	@:default(0) @:optional var beforeError:Int;
	@:default(0) @:optional var afterError:Int;
}

---

typedef Color = {

	final red:Float;

	final green:Float;

	var green:Float;
}

typedef ConditionalEmptyLinesConfig = {

	@:default(0) @:optional var afterIf:Int;

	@:default(0) @:optional var beforeElse:Int;

	@:default(0) @:optional var afterElse:Int;

	@:default(0) @:optional var beforeEnd:Int;

	@:default(0) @:optional var beforeError:Int;

	@:default(0) @:optional var afterError:Int;
}
