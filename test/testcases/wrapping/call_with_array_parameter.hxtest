{
	"wrapping": {
		"arrayWrap": {
			"defaultWrap": "onePerLine",
			"rules": []
		}
	}
}

---

class Main {
	static function main() {
		var allAssignments:Array<TokenTree> = root.filter([
			Binop(OpAssign),
			Binop(OpAssignOp(OpAdd)),
			Binop(OpAssignOp(OpSub)),
			Binop(OpAssignOp(OpDiv)),
			Binop(OpAssignOp(OpMult)),
			Binop(OpAssignOp(OpShl)),
			Binop(OpAssignOp(OpShr)),
			Binop(OpAssignOp(OpUShr)),
			Binop(OpAssignOp(OpAnd)),
			Binop(OpAssignOp(OpOr)),
			Binop(OpAssignOp(OpXor))
		],
			ALL);
	}
}

---

class Main {
	static function main() {
		var allAssignments:Array<TokenTree> = root.filter([
			Binop(OpAssign),
			Binop(OpAssignOp(OpAdd)),
			Binop(OpAssignOp(OpSub)),
			Binop(OpAssignOp(OpDiv)),
			Binop(OpAssignOp(OpMult)),
			Binop(OpAssignOp(OpShl)),
			Binop(OpAssignOp(OpShr)),
			Binop(OpAssignOp(OpUShr)),
			Binop(OpAssignOp(OpAnd)),
			Binop(OpAssignOp(OpOr)),
			Binop(OpAssignOp(OpXor))
		], ALL);
	}
}
