{
}

---

class Main {
	static function main() {
		return {
			name:x.name, type:t, isPublic:x.x.exists("public") || defPublic, isFinal:x.x.exists("final"), isOverride:x.x.exists("override"),
			line:if (x.has.line) Std.parseInt(x.att.line) else null, doc:doc, get:if (x.has.get) mkRights(x.att.get) else RNormal, set:if (x.has.set)
				mkRights(x.att.set)
			else
				RNormal, params:if (x.has.params) mkTypeParams(x.att.params) else [], platforms:defplat(), meta:meta, overloads:overloads, expr:if (x.has.expr)
				x.att.expr
			else
				null
		};
	}
}

---

class Main {
	static function main() {
		return {
			name: x.name,
			type: t,
			isPublic: x.x.exists("public") || defPublic,
			isFinal: x.x.exists("final"),
			isOverride: x.x.exists("override"),
			line: if (x.has.line) Std.parseInt(x.att.line) else null,
			doc: doc,
			get: if (x.has.get) mkRights(x.att.get) else RNormal,
			set: if (x.has.set) mkRights(x.att.set) else RNormal,
			params: if (x.has.params) mkTypeParams(x.att.params) else [],
			platforms: defplat(),
			meta: meta,
			overloads: overloads,
			expr: if (x.has.expr) x.att.expr else null
		};
	}
}
